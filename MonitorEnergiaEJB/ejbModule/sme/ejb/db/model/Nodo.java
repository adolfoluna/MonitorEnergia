package sme.ejb.db.model;
// Generated May 16, 2019 10:28:33 PM by Hibernate Tools 5.2.11.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * Nodo generated by hbm2java
 */
@Entity
@Table(name = "nodo", catalog = "smedb", uniqueConstraints = @UniqueConstraint(columnNames = "numero"))
public class Nodo implements java.io.Serializable {

	private Integer idnodo;
	private int version;
	private String nombre;
	private String domicilio;
	private String codigo;
	private String numero;
	private Boolean cfePresente;
	private Date cfeFecha;
	private Boolean upsPresente;
	private Date upsFecha;
	private Date fechaNotificacion;
	private Date fechaMonitoreo;
	private boolean activo;
	private Set<Historial> historials = new HashSet<Historial>(0);

	public Nodo() {
	}

	public Nodo(String nombre, String numero, boolean activo) {
		this.nombre = nombre;
		this.numero = numero;
		this.activo = activo;
	}

	public Nodo(String nombre, String domicilio, String codigo, String numero, Boolean cfePresente, Date cfeFecha,
			Boolean upsPresente, Date upsFecha, Date fechaNotificacion, Date fechaMonitoreo, boolean activo,
			Set<Historial> historials) {
		this.nombre = nombre;
		this.domicilio = domicilio;
		this.codigo = codigo;
		this.numero = numero;
		this.cfePresente = cfePresente;
		this.cfeFecha = cfeFecha;
		this.upsPresente = upsPresente;
		this.upsFecha = upsFecha;
		this.fechaNotificacion = fechaNotificacion;
		this.fechaMonitoreo = fechaMonitoreo;
		this.activo = activo;
		this.historials = historials;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idnodo", unique = true, nullable = false)
	public Integer getIdnodo() {
		return this.idnodo;
	}

	public void setIdnodo(Integer idnodo) {
		this.idnodo = idnodo;
	}

	@Version
	@Column(name = "version", nullable = false)
	public int getVersion() {
		return this.version;
	}

	public void setVersion(int version) {
		this.version = version;
	}

	@Column(name = "nombre", nullable = false, length = 45)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "domicilio", length = 100)
	public String getDomicilio() {
		return this.domicilio;
	}

	public void setDomicilio(String domicilio) {
		this.domicilio = domicilio;
	}

	@Column(name = "codigo", length = 10)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Column(name = "numero", unique = true, nullable = false, length = 10)
	public String getNumero() {
		return this.numero;
	}

	public void setNumero(String numero) {
		this.numero = numero;
	}

	@Column(name = "cfe_presente")
	public Boolean getCfePresente() {
		return this.cfePresente;
	}

	public void setCfePresente(Boolean cfePresente) {
		this.cfePresente = cfePresente;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "cfe_fecha", length = 19)
	public Date getCfeFecha() {
		return this.cfeFecha;
	}

	public void setCfeFecha(Date cfeFecha) {
		this.cfeFecha = cfeFecha;
	}

	@Column(name = "ups_presente")
	public Boolean getUpsPresente() {
		return this.upsPresente;
	}

	public void setUpsPresente(Boolean upsPresente) {
		this.upsPresente = upsPresente;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ups_fecha", length = 19)
	public Date getUpsFecha() {
		return this.upsFecha;
	}

	public void setUpsFecha(Date upsFecha) {
		this.upsFecha = upsFecha;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_notificacion", length = 19)
	public Date getFechaNotificacion() {
		return this.fechaNotificacion;
	}

	public void setFechaNotificacion(Date fechaNotificacion) {
		this.fechaNotificacion = fechaNotificacion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_monitoreo", length = 19)
	public Date getFechaMonitoreo() {
		return this.fechaMonitoreo;
	}

	public void setFechaMonitoreo(Date fechaMonitoreo) {
		this.fechaMonitoreo = fechaMonitoreo;
	}

	@Column(name = "activo", nullable = false)
	public boolean isActivo() {
		return this.activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "nodo")
	public Set<Historial> getHistorials() {
		return this.historials;
	}

	public void setHistorials(Set<Historial> historials) {
		this.historials = historials;
	}

}
